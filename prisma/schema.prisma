// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  dcId            Int?
  port            Int?
  serverAddress   String?
  authKey         Bytes?
  entities        Entity[]
}

model Entity {
  id          Int       @id @default(autoincrement())
  // 源代码里面大概支持 string 和 BigInteger，不如先全都存 String
  entityId    String
  sessionId   Int
  session     Session   @relation(fields: [sessionId], references: [id])
  hash        String?
  username    String?
  phone       String?
  name        String?

  @@unique([entityId, sessionId])
}

model Message {
  id         Int      @id @default(autoincrement())
  qqRoomId   BigInt      @db.BigInt
  qqSenderId BigInt      @db.BigInt
  time       Int
  brief      String?
  seq        Int
  rand       Int
  pktnum     Int
  tgChatId   BigInt      @db.BigInt
  tgMsgId    Int

  @@unique([qqRoomId, qqSenderId, seq, rand, pktnum, time])
  @@unique([tgChatId, tgMsgId])
}

model ForwardPair {
  id          Int           @id @default(autoincrement())
  qqRoomId    BigInt           @unique @db.BigInt
  tgChatId    BigInt           @unique @db.BigInt
  avatarCache AvatarCache[]
}

model File {
  id      Int    @id @default(autoincrement())
  roomId  BigInt    @db.BigInt
  fileId  String
  info    String

  @@unique([roomId, fileId])
}

model FlashPhoto {
  id       Int    @id @default(autoincrement())
  photoMd5 String
}

model FlashPhotoView {
  id           Int @id @default(autoincrement())
  flashPhotoId Int
  viewerId     BigInt @db.BigInt

  @@unique([flashPhotoId, viewerId])
}

model AvatarCache {
  id            Int         @id @default(autoincrement())
  forwardPair   ForwardPair @relation(fields: [forwardPairId], references: [id])
  forwardPairId Int         @unique
  hash          Bytes
}
