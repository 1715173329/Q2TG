diff --git a/lib/message/converter.d.ts b/lib/message/converter.d.ts
index 599b17b7cf4bb2a556f4dde36ef0597b3778357f..3c360ac7e80a00c9f43de71c582a45f8bfc7738d 100644
--- a/lib/message/converter.d.ts
+++ b/lib/message/converter.d.ts
@@ -55,6 +55,7 @@ export declare class Converter {
     private mirai;
     private file;
     private reply;
+    private longmsg;
     /** 转换为分片消息 */
     toFragments(): Uint8Array[];
     private _divideText;
diff --git a/lib/message/converter.js b/lib/message/converter.js
index fea96dfe79cc6a30e9d366a28534ba9dfba47850..d600bc7e4c1b344b714ad9733c5d76bff4c25b1d 100644
--- a/lib/message/converter.js
+++ b/lib/message/converter.js
@@ -93,7 +93,7 @@ class Converter {
             return;
         }
         if (qq === "all") {
-            var q = 0, flag = 1, display = "全体成员";
+            var q = 0, flag = 1, display = text || "全体成员";
         }
         else {
             var q = Number(qq), flag = 0, display = text || String(qq);
@@ -103,7 +103,6 @@ class Converter {
                 display = member?.card || member?.nickname || display;
             }
         }
-        display = "@" + display;
         if (dummy)
             return this._text(display);
         const buf = Buffer.allocUnsafe(6);
@@ -451,6 +450,15 @@ class Converter {
         });
         this.brief += data;
     }
+    longmsg(elem) {
+        const { resId } = elem;
+        this.elems.push({
+            37: {
+                6: 1,
+                7: resId
+            }
+        });
+    }
     file(elem) {
         throw new Error("暂不支持发送或转发file元素，请调用文件相关API完成该操作");
     }
diff --git a/lib/message/elements.d.ts b/lib/message/elements.d.ts
index 3bfa7465fe2fa1a2f1aeafe054cb590bf0ed68f0..22976e83d0b747fbceb6e8b8f09ece1eefe808aa 100644
--- a/lib/message/elements.d.ts
+++ b/lib/message/elements.d.ts
@@ -184,6 +184,10 @@ export interface ButtonElem {
         }[];
     };
 }
+export interface LongMsgElem {
+    type: "longmsg";
+    resId: string;
+}
 export interface Button {
     /** 按钮ID：在一个keyboard消息内设置唯一 */
     id?: string;
@@ -290,7 +294,7 @@ export interface ForwardNode extends Forwardable {
 export type ChainElem = TextElem | FaceElem | BfaceElem | MfaceElem | ImageElem | AtElem | MiraiElem | ReplyElem | ForwardNode | QuoteElem | MarkdownElem | ButtonElem;
 export declare const ChainElemTypes: ChainElem["type"][];
 /** 注意：只有`ChainElem`中的元素可以组合发送，其他元素只能单独发送 */
-export type MessageElem = TextElem | FaceElem | BfaceElem | MfaceElem | ImageElem | AtElem | MiraiElem | ReplyElem | FlashElem | PttElem | VideoElem | JsonElem | XmlElem | PokeElem | LocationElem | ShareElem | MusicElem | FileElem | ForwardNode | QuoteElem | MarkdownElem | ButtonElem;
+export type MessageElem = TextElem | FaceElem | BfaceElem | MfaceElem | ImageElem | AtElem | MiraiElem | ReplyElem | FlashElem | PttElem | VideoElem | JsonElem | XmlElem | PokeElem | LocationElem | ShareElem | MusicElem | FileElem | ForwardNode | QuoteElem | MarkdownElem | ButtonElem | LongMsgElem;
 /** 可通过`sendMsg`发送的类型集合 (字符串、元素对象，或它们的数组) */
 export type Sendable = string | MessageElem | (string | MessageElem)[];
 /** 用于构造消息元素 */
@@ -323,6 +327,7 @@ export declare const segment: {
     xml(data: string, id?: number): XmlElem;
     markdown(content: string): MarkdownElem;
     button(content: ButtonElem["content"]): ButtonElem;
+    longmsg(resId: string): LongMsgElem;
     /** 一种特殊消息(官方客户端无法解析) */
     mirai(data: string): MiraiElem;
     /** 音乐 */
diff --git a/lib/message/elements.js b/lib/message/elements.js
index de3a1d116c794ae2ee9e18836d6669a4d89d59d0..9c6c5c1fc5949eb49636d539aed4ed140bb3ec0a 100644
--- a/lib/message/elements.js
+++ b/lib/message/elements.js
@@ -99,6 +99,11 @@ exports.segment = {
             type: "button", content
         };
     },
+    longmsg(resId) {
+        return {
+            type: "longmsg", resId
+        };
+    },
     /** 一种特殊消息(官方客户端无法解析) */
     mirai(data) {
         return {
